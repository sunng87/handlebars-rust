name: CI
on:
  schedule: [{cron: "0 13 * * *"}]
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, beta, nightly, macos, windows]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
          - build: nightly
            os: ubuntu-latest
            rust: nightly
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        components: clippy
        override: true
    - name: Lint
      run: cargo clippy --all-features -- -D warnings
    - name: Build and run tests
      run: cargo test --all-features
    - name: Install Tarpaulin
      if: matrix.build == 'stable'
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-tarpaulin
        version: 0.22.0
        use-tool-cache: true
    - name: Coverage
      if: matrix.build == 'stable'
      run: cargo tarpaulin --all-features -o Lcov --output-dir ./coverage
    - name: Coveralls
      if: matrix.build == 'stable'
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt
        override: true
    - run: cargo fmt -- --check

  msrv:
    name: MSRV
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: "1.66"
        override: true
    - run: cargo build --all-features

  security_audit:
    name: rust_audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
